1)

mysql -u root -p
hortonworks1

create database movielens;

set names 'utf8';
set character set utf8;

use movielens;

source movielens.sql;

sqoop import -Dmapreduce.job.classloader=true --connect jdbc:mysql://localhost/movielens --driver com.mysql.jdbc.Driver --username=root --password=hortonworks1 --target-dir /user/maria_dev/movie_genre_not_partitioned --query '
select 
	m.id as movie_id,
	m.title as movie_title,
	g.name as genre
from 
	movies as m join genres_movies as gm
	on m.id = gm.movie_id 
	join genres as g
	on g.id = gm.genre_id
where $CONDITIONS' -m 1 --as-avrodatafile

2)

CREATE EXTERNAL TABLE movies_genres_not_partitioned
 STORED AS AVRO
 LOCATION 'hdfs:///user/maria_dev/movie_genre_not_partitioned'
 TBLPROPERTIES ('avro.schema.url'= 'hdfs:///user/maria_dev/movie_genre_not_partitioned/AutoGeneratedSchema.avsc');

3)

create table movies_genres_partitioned(
	movie_id int,
  	movie_title string
)
partitioned by (genre string)
STORED AS PARQUET;

4)

SET hive.exec.dynamic.partition=true;
SET hive.exec.dynamic.partition.mode=nonstrict;

insert overwrite table movies_genres_partitioned
PARTITION(genre)
select movie_id, movie_title, genre from movies_genres_not_partitioned;

